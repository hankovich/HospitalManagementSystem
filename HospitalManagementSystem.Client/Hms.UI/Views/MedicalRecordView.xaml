<UserControl x:Class="Hms.UI.Views.MedicalRecordView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:converters="clr-namespace:Hms.UI.Infrastructure.Converters"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300">
    <UserControl.Resources>
        <converters:InverseBooleanConverter x:Key="InverseBooleanConverter"/>
        <converters:NegateBooleanToVisibilityConverter x:Key="NegateBooleanToVisibilityConverter"/>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <Style TargetType="{x:Type Hyperlink}">
            <Setter Property="TextDecorations" Value="Underline"/>
            <Setter Property="Foreground" Value="{StaticResource AccentBaseColorBrush}"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Foreground" Value="{StaticResource AccentColorBrush}"/>
                    <Setter Property="Cursor" Value="Hand" />
                </Trigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding LoadedCommand}"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"></RowDefinition>
            <RowDefinition></RowDefinition>
            <RowDefinition Height="Auto"></RowDefinition>
        </Grid.RowDefinitions>

        <mah:ProgressRing Grid.RowSpan="3" IsActive="{Binding LoadedCommand.Execution.IsCompleted, Converter={StaticResource InverseBooleanConverter}}" />

        <Grid Grid.Row="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"></ColumnDefinition>
                <ColumnDefinition></ColumnDefinition>
                <ColumnDefinition></ColumnDefinition>
            </Grid.ColumnDefinitions>

            <Button Grid.Column="0" Command="{Binding BackCommand}" Style="{StaticResource MetroCircleButtonStyle}" HorizontalAlignment="Center" Margin="10" IsCancel="True">
                <iconPacks:PackIconMaterial Kind="ArrowLeftBoldCircleOutline" Foreground="{StaticResource AccentBaseColorBrush}" Width="30" Height="30"/>
            </Button>

            <TextBlock Grid.Column="1" Text="{Binding Record.AddedAtUtc, StringFormat=dd MMM yyyy hh:mm}" FontSize="20" Margin="10"/>

            <TextBlock Grid.Column="2" FontSize="20" Margin="10" HorizontalAlignment="Right" VerticalAlignment="Top">
                <Hyperlink Command="{Binding OpenDoctorCommand}">
                    <Run Text="{Binding Profile.FirstName}"/>
                    <Run Text="{Binding Profile.LastName}"/>
                </Hyperlink>
            </TextBlock>
        </Grid>

        <TextBox Grid.Row="1" Text="{Binding Record.Content}" IsReadOnly="True" Margin="10 5 10 10" VerticalScrollBarVisibility="Auto" TextWrapping="Wrap"/>

        <ScrollViewer Grid.Row="2" HorizontalScrollBarVisibility="Visible" VerticalScrollBarVisibility="Disabled">
            <ItemsControl ItemsSource="{Binding Attachments}" AlternationCount="4">
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <Grid Margin="10 0 5 10">
                            <Button Width="50" Height="50" Command="{Binding Path=DataContext.OpenAttachmentCommand, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}" CommandParameter="{Binding Path=DataContext.Id, RelativeSource={RelativeSource AncestorType={x:Type ContentPresenter}}}" Tag="{Binding Path=DataContext, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}">
                                <Button.Style>
                                    <Style>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=(ItemsControl.AlternationIndex), 
                                                   RelativeSource={RelativeSource AncestorType={x:Type ContentPresenter}}}" Value="0">
                                                <Setter Property="Button.Background" Value="{StaticResource AccentColorBrush}"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Path=(ItemsControl.AlternationIndex), 
                                                   RelativeSource={RelativeSource AncestorType={x:Type ContentPresenter}}}" Value="1">
                                                <Setter Property="Button.Background" Value="{StaticResource AccentColorBrush2}"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Path=(ItemsControl.AlternationIndex), 
                                                   RelativeSource={RelativeSource AncestorType={x:Type ContentPresenter}}}" Value="2">
                                                <Setter Property="Button.Background" Value="{StaticResource AccentColorBrush3}"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Path=(ItemsControl.AlternationIndex), 
                                                   RelativeSource={RelativeSource AncestorType={x:Type ContentPresenter}}}" Value="3">
                                                <Setter Property="Button.Background" Value="{StaticResource AccentColorBrush4}"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                                <Button.Template>
                                    <ControlTemplate TargetType="{x:Type Button}">
                                        <Grid x:Name="grid">
                                            <Border x:Name="border" CornerRadius="10" BorderBrush="{DynamicResource AccentColorBrush}" BorderThickness="3" Background="{Binding Path=Background, RelativeSource={RelativeSource Mode=TemplatedParent}}">
                                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" TextElement.FontWeight="Bold" />
                                            </Border>
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsPressed" Value="True">
                                                <Setter Property="Opacity" TargetName="border" Value="0.75"/>
                                            </Trigger>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource GrayBrush5}"/>
                                            </Trigger>
                                            <Trigger Property="IsEnabled" Value="False">
                                                <Setter Property="Opacity" TargetName="grid" Value="0.25"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Button.Template>
                                <Grid>
                                    <iconPacks:PackIconMaterial Kind="Download" Foreground="{StaticResource WhiteBrush}" VerticalContentAlignment="Stretch" HorizontalContentAlignment="Center" Visibility="{Binding Path=DataContext.IsLoading, RelativeSource={RelativeSource AncestorType={x:Type ContentPresenter}}, Converter={StaticResource NegateBooleanToVisibilityConverter}}"/>
                                    <mah:ProgressRing Foreground="{StaticResource WhiteBrush}" VerticalContentAlignment="Stretch" HorizontalContentAlignment="Center" Visibility="{Binding Path=DataContext.IsLoading, RelativeSource={RelativeSource AncestorType={x:Type ContentPresenter}}, Converter={StaticResource BooleanToVisibilityConverter}}" Width="40" Height="40"/>
                                </Grid>
                                <Button.ToolTip>
                                    <ToolTip>
                                        <TextBlock Text="{Binding Name}"/>
                                    </ToolTip>
                                </Button.ToolTip>
                                <Button.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Header="Open" Command="{Binding PlacementTarget.Tag.OpenAttachmentCommand, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=ContextMenu}}" CommandParameter="{Binding Path=DataContext.Id, RelativeSource={RelativeSource TemplatedParent}}"/>
                                        <MenuItem Header="Show In Folder" Command="{Binding PlacementTarget.Tag.ShowAttachmentInFolderCommand, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=ContextMenu}}" CommandParameter="{Binding Path=DataContext.Id, RelativeSource={RelativeSource TemplatedParent}}"/>
                                    </ContextMenu>
                                </Button.ContextMenu>
                            </Button>
                        </Grid>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <StackPanel Orientation="Horizontal"/>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
            </ItemsControl>
        </ScrollViewer>
    </Grid>
</UserControl>